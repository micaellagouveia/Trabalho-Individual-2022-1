upstream library_back {
    server library_back:8000 fail_timeout=0;
    keepalive_timeout 300s;
}

server {
    listen 82;

    # add here the ip address of your server
    # or a domain pointing to that ip (like example.com or www.example.com)
    server_name localhost;

    client_max_body_size 4G;
    keepalive_timeout 300;

    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location /static/ {
        alias /static/;
    }

    # checks for static file, if not found proxy to app
    location / {
        proxy_pass_request_headers on;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Host $http_host;
        proxy_redirect          off;
        proxy_pass  http://library_back;
        proxy_set_header        X-Forwarded-Proto $scheme;
    }

    location @proxy_to_app {
      # Simple requests
      if ($request_method ~* "(GET|POST)") {
        add_header "Access-Control-Allow-Origin"  *;
      }

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header REMOTE_ADDR $remote_addr;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      #proxy_set_header X-Forwarded-For $remote_addr;
      fastcgi_param REMOTE_ADDR $remote_addr;
      fastcgi_buffers 8 16k;
      fastcgi_buffer_size 32k;
      fastcgi_connect_timeout 300;
      fastcgi_send_timeout 300;
      fastcgi_read_timeout 300;
      proxy_read_timeout 300s;

      proxy_redirect off;
      proxy_pass http://library_back;
    }
}